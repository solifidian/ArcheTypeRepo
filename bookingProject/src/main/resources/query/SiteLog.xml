<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.booking.admin.sitelog.dao.SiteLogDAO">

	<!-- 
		book search for admin query
	 -->
	<!-- standart bookList query -->
	<sql id="getSiteLogList">
		select log_no
				, log_ip
				, log_title
				, log_comment
				, log_update
		from booking_sitelog
		<where>
			<if test="keyword != '' and keyword != null">
				<choose>
					<when test="searchMode == 'allSch'">
						log_title like '%' || #{keyword} || '%'
						or log_comment like '%' || #{keyword} || '%'
					</when>
					<when test="searchMode == 'titleSch'">
						log_title like '%' || #{keyword} || '%'
					</when>
					<when test="searchMode == 'commentSch'">
						log_comment like '%' || #{keyword} || '%'
					</when>
					<when test="searchMode == 'ipSch'">
						log_ip like '%' || #{keyword} || '%'
					</when>
				</choose>
			</if>
			<if test="searchStartDate != '' and searchStartDate != null">
				<if test="searchEndDate != '' and searchEndDate != null">
					<if test="keyword != '' and keyword != null">
					and
					</if>
					<choose>
						<when test="searchDateMode == 'date'">
							log_update between #{searchStartDate} and #{searchEndDate}
						</when>
					</choose>
				</if>
			</if> 
		</where>
		<if test="orderTarget != '' and orderTarget != null">
			order by ${orderTarget}
		</if>
		<choose>
			<when test="orderDirection == 'desc'">
				desc
			</when>
			<when test="orderDirection == 'asc'">
				asc
			</when>
		</choose>
	</sql>
	<!-- select Query -->
	<select id="siteLogList" parameterType="siteLog" resultType="siteLog">
		select log_no
				, log_ip
				, log_title
				, log_comment
				, log_update
		from (
				select list.*, rownum as rnum 
				from (<include refid="getSiteLogList"></include>) list
		)
		<where>
			<if test="searchStartRow != null and searchStartRow != ''">
				<if test="searchEndRow != null and searchEndRow != ''">
					rnum between #{searchStartRow} and #{searchEndRow}
				</if>
			</if>
		</where>
	</select>
	
	<select id="siteLogTotal" parameterType="siteLog" resultType="int">
		select count(log_no) as searchTotal
		from (
				select list.*, rownum as rnum 
				from (<include refid="getSiteLogList"></include>) list
		)
	</select>
	
	<!-- insert Query -->
	<insert id="siteLogInsert" parameterType="siteLog">
		<selectKey keyProperty="log_no" resultType="int" order="BEFORE">
			select booking_sitelog_seq.nextval from dual
		</selectKey>
		insert into booking_sitelog
		(log_no, log_ip, log_title, log_comment)
		values(#{log_no}, #{log_ip}, #{log_title}, #{log_comment})
	</insert>
	
	<!-- deleteQuery -->
</mapper>